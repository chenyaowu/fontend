/*优先级 内联式 > 嵌入式 > 外部式 */
span{
	color:red;
	font-size: 20px;
}
/*
选择器{
	样式；
}
*/
/*通用选择器*/
*{color:red;}
/*
标签选择器
标签{样式;}
*/
p{font-size: 12px;}

/* 
类选择器
.类选择器名称{样式;}
*/
.streess{color: red;}
/*
id选择器
#id{样式；}
*/
#setGreen{color: green;}
/*子选择器，用于选择指定标签元素的第一代子元素*/
.food>li{	border:1px solid red;}
/*后代选择器，用于指定标签元素下的后辈元素*/
.first span{color:red;}
/*伪类选择器*/
a:hover{color: red;}
/*分组选择*/
h1,span{color:red;}


/*文字排版语法*/
*{
	font-family: "宋体";/*字体*/
	font-size: 12px;/*字号*/
	color: #666;/*颜色*/
	font-weight: bold;/*粗体*/
	font-style: italic;/*斜体*/
	text-decoration: underline;/*下划线*/
	text-decoration: line-through;/*删除线*/
	text-indent: 2em;/*缩进*/
	line-height: 1.5em;/*行高*/
	letter-spacing: 50px;/*文字间隔或者字母间隔*/
	word-spacing: 50px;/*英文单词之间的间距*/
	text-align: center;/*对齐 center水平居中 left水平居左 right水平居右*/
}

/*
常用的块状元素有：


<div>、<p>、<h1>...<h6>、<ol>、<ul>、<dl>、<table>、<address>、<blockquote> 、<form> display:block;
块级元素特点：

1、每个块级元素都从新的一行开始，并且其后的元素也另起一行。（真霸道，一个块级元素独占一行）

2、元素的高度、宽度、行高以及顶和底边距都可设置。

3、元素宽度在不设置的情况下，是它本身父容器的100%（和父元素的宽度一致），除非设定一个宽度。


常用的内联元素有：

<a>、<span>、<br>、<i>、<em>、<strong>、<label>、<q>、<var>、<cite>、<code> display:inline
内联元素特点：

1、和其他元素都在一行上；

2、元素的高度、宽度及顶部和底部边距不可设置；

3、元素的宽度就是它包含的文字或图片的宽度，不可改变。


常用的内联块状元素有：

<img>、<input> display:inline-block

inline-block 元素特点：

1、和其他元素都在一行上；

2、元素的高度、宽度、行高以及顶和底边距都可设置

*/


/*盒子模型*/
div{
	border: 2px solid red;/*边框宽度 边框样式(虚线：dashed 点线：dotted 实现：solid) 边框颜色*/
	width: 200px;/*宽度*/
	height: 200px;/*高度*/
	padding: 20px 10px 15px 30px;/*填充 top right bottom left*/
	margin: 20px 10px 15px 30px;/*边界 top right bottom left*/
}

/*
在网页中，元素有三种布局模型：
1、流动模型（Flow）
2、浮动模型 (Float)
3、层模型（Layer）


流动布局模型具有2个比较典型的特征：

第一点，块状元素都会在所处的包含元素内自上而下按顺序垂直延伸分布，因为在默认状态下，块状元素的宽度都为100%。实际上，块状元素都会以行的形式占据位置。如右侧代码编辑器中三个块状元素标签(div，h1，p)宽度显示为100%。

第二点，在流动模型下，内联元素都会在所处的包含元素内从左到右水平分布显示。


浮动模型:float;


层模型有三种形式：

1、绝对定位(position: absolute)

设置position:absolute(表示绝对定位)，这条语句的作用将元素从文档流中拖出来，然后使用left、right、top、bottom属性相对于其最接近的一个具有定位属性的父包含块进行绝对定位。如果不存在这样的包含块，则相对于body元素，即相对于浏览器窗口

2、相对定位(position: relative)

设置position:relative（表示相对定位），它通过left、right、top、bottom属性确定元素在正常文档流中的偏移位置。相对定位完成的过程是首先按static(float)方式生成一个元素(并且元素像层一样浮动了起来)，然后相对于以前的位置移动，移动的方向和幅度由left、right、top、bottom属性确定，偏移前的位置保留不动

3、固定定位(position: fixed)

fixed：表示固定定位，与absolute定位类型类似，但它的相对移动的坐标是视图（屏幕内的网页窗口）本身。由于视图本身是固定的，它不会随浏览器窗口的滚动条滚动而变化，除非你在屏幕中移动浏览器窗口的屏幕位置，或改变浏览器窗口的显示大小，因此固定定位的元素会始终位于浏览器窗口内视图的某个位置，不会受文档流动影响


relative与absolute组合使用
1、参照定位的元素必须是相对定位元素的前辈元素：
<div id="box1"><!--参照定位的元素-->
    <div id="box2">相对参照元素进行定位</div><!--相对定位元素-->
</div>
<!--参照定位的元素必须加入position:relative;-->
#box1{
    width:200px;
    height:200px;
    position:relative;        
}

定位元素加入position:absolute，便可以使用top、bottom、left、right来进行偏移定位了。
#box2{
    position:absolute;
    top:20px;
    left:30px;         
}

*/


/*
px em %

如果元素的 font-size 为 14px ，那么 1em = 14px；如果 font-size 为 18px，那么 1em = 18px

p{font-size:12px;line-height:130%}  设置行高（行间距）为字体的130%（12 * 1.3 = 15.6px）
*/


/*
水平居中设置

行内元素
如果被设置元素为文本、图片等行内元素时，水平居中是通过给父元素设置 text-align:center 来实现

块状元素

定宽块状元素
margin:20px auto;

不定宽块状元素方法
1.加入 table 标签（利用table标签的长度自适应性---即不定义其长度也不默认父元素body的长度（table其长度根据其内文本长度决定），因此可以看做一个定宽度块元素，然后再利用定宽度块状居中的margin的方法，使其水平居中）

2.设置 display: inline 方法：与第一种类似，显示类型设为 行内元素，进行不定宽元素的属性设置（改变块级元素的 display 为 inline 类型（设置为 行内元素 显示），然后使用 text-align:center 来实现居中效果）

3.设置 position:relative 和 left:50%：利用 相对定位 的方式，将元素向左偏移 50% ，即达到居中的目的
	通过给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中

*/

/*
垂直居中

父元素高度确定的单行文本
通过设置父元素的 height 和 line-height 高度一致来实现的


父元素高度确定的多行文本
方法一：使用插入 table  (包括tbody、tr、td)标签，同时设置 vertical-align：middle

*/

/*
隐性改变display类型
当为元素设置以下 2 个句之一：
1. position : absolute 

2. float : left 或 float:right 

元素的display显示类型就会自动变为以 display:inline-block（块状元素）的方式显示，当然就可以设置元素的 width 和 height 了，且默认宽度不占满父元素

*/